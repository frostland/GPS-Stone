{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green116\blue0;\red170\green13\blue145;\red92\green38\blue153;
\red46\green13\blue110;\red196\green26\blue22;\red63\green110\blue116;\red38\green71\blue75;}
\deftab360
\pard\tx360\pardeftab360\ql\qnatural\pardirnatural

\f0\fs26 \cf0 \CocoaLigature0 When the user disable the location manager to get the current location, the buttons Record my location in the info view and the detailed view must be disabled (or replaced by some text asking the user to enable the app to know the user location).\
\
Error codes:\
	\'95\'a01: Cannot create data dir (on opening of the application)\
	\'95\'a02: Cannot delete GPX file when deleting recording\
	\'95\'a011: $mail->send returned an error\
	\'95\'a012: Bad file extension\
	\'95\'a013: No from field\
	\'95\'a014: Bad file type\
	\'95\'a015: No attachement file with name "GPXFile"\
\
Fields used to contact VSO-Software's PHP script to send mails from an iPhone:\
	\'95\'a0appVersion: Version of the iPhone application used when contacting server.\
	\'95\'a0sendTo: Address(es) to which to send the mail.\
	\'95\'a0fromField: Sender field of the eMail.\
	\'95\'a0mailTitle: Title of the sent mail.\
	\'95\'a0sentWithDefaultiPhoneMailSheet: If 1, do NOT send the mail (sendTo, fromField and mailTitle will be empty). Just use this connection for stats.\
	\'95\'a0lang: Lang used when contacting server. Format is "en", or "fr", etc.\
	\'95\'a0deviceID: The unique identifier of the iPhone/iPod Touch used to contact the server.\
	\'95\'a0GPXFile: The file sent in question.\
\
\

\f1\fs20 \cf2 /* Here is the code to parse a GPX file. gpxElement is an instance variable. */\
\pard\tx360\pardeftab360\ql\qnatural\pardirnatural
\cf0 - (\cf3 void\cf0 )parser:(\cf4 NSXMLParser\cf0  *)parser didStartElement:(\cf4 NSString\cf0  *)elementName namespaceURI:(\cf4 NSString\cf0  *)namespaceURI qualifiedName:(\cf4 NSString\cf0  *)qualifiedName attributes:(\cf4 NSDictionary\cf0  *)attributeDict\
\{\
	\cf3 if\cf0  ([elementName \cf5 isEqualToString\cf0 :\cf6 @"gpx"\cf0 ]) \{\
		gpxElement = [[\cf7 GPXgpxType\cf0  \cf5 alloc\cf0 ] \cf8 initWithAttributes\cf0 :attributeDict \cf8 elementName\cf0 :elementName];\
		parser.\cf7 delegate\cf0  = gpxElement;\
	\}\
\}\
\
- (\cf3 void\cf0 )startParsing\
\{\
	\cf4 NSString\cf0  *path = \cf6 @"Path to gpx file"\cf0 ;\
	\cf4 NSXMLParser\cf0  *parser = [[\cf4 NSXMLParser\cf0  \cf5 alloc\cf0 ] \cf5 initWithContentsOfURL\cf0 :[\cf4 NSURL\cf0  \cf5 fileURLWithPath\cf0 :path]];\
	[parser \cf5 setDelegate\cf0 :\cf3 self\cf0 ];\
	[parser \cf5 parse\cf0 ];\
	[gpxElement \cf5 release\cf0 ];\
\}\
}